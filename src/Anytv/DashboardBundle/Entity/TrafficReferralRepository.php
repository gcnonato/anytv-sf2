<?php

namespace Anytv\DashboardBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TrafficReferralRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrafficReferralRepository extends EntityRepository
{
    public function findAllTrafficReferrals($page, $items_per_page, $order_by, $order, $stat_date = null)
    {
        $first_result = ($items_per_page * ($page-1));
        
        $query = $this->getEntityManager()->createQueryBuilder()
          ->select(array('tr', 'a', 'o'))
          ->from('Anytv\DashboardBundle\Entity\TrafficReferral', 'tr')
          ->leftJoin('tr.affiliate', 'a')
          ->leftJoin('tr.offer', 'o')
          //->where("tr.statDate = :stat_date")
          //->setParameter('stat_date', $stat_date)
          ->setFirstResult($first_result)
          ->setMaxResults($items_per_page)
          ->orderBy('tr.'.$order_by, $order)
          ->getQuery();
        
        return $query->getResult();
    }
    
    public function countAllTrafficReferrals($stat_date = null)
    {    
        $query = $this->createQueryBuilder('tr')
          ->select('count(tr.id)')
          //->where("tr.statDate = :stat_date")
          //->setParameter('stat_date', $stat_date)
          ->getQuery();
        
        return $query->getSingleScalarResult();
    }
    
    public function findTrafficReferralsByAffiliate($affiliate)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
          ->select(array('tr', 'a', 'o'))
          ->from('Anytv\DashboardBundle\Entity\TrafficReferral', 'tr')
          ->leftJoin('tr.affiliate', 'a')
          ->leftJoin('tr.offer', 'o')
          ->where("tr.affiliate = :affiliate")
          ->setParameter('affiliate', $affiliate)
          ->addGroupBy("tr.offer")
          ->addGroupBy("tr.url")
          ->orderBy('tr.statDate', 'DESC')
          ->getQuery();
        
        return $query->getResult();
    }
    
    public function getMaxTrafficReferralDate()
    {    
        $query = $this->createQueryBuilder('tr')
                      ->select('max(tr.statDate)')
                      ->getQuery();
        
        return $query->getSingleScalarResult();
    }
    
    public function findAllTrafficReferralsByAffiliate($page, $items_per_page, $order_by, $order, $affiliate, $youtube = false)
    {
      $first_result = ($items_per_page * ($page-1));
        
      $query = $this->createQueryBuilder('tr');
        
      $where = "tr.affiliate = :affiliate";
      $params = array('affiliate'=>$affiliate); 
      
      if($youtube)
      {
        $where .= " AND tr.url LIKE :youtube";
        $params['youtube'] = '%youtube.com/watch?v=%';        
      }
        
      $query = $query->where($where)
                     ->setParameters($params)
                     ->setFirstResult($first_result)
                     ->setMaxResults($items_per_page)
                     ->orderBy('tr.'.$order_by, $order)
                     ->getQuery();
          
      return $query->getResult();
    }
    
    public function countAllTrafficReferralsByAffiliate($affiliate, $youtube = false)
    {    
        $query = $this->createQueryBuilder('tr')
                      ->select('count(tr.id)');
        
        $where = "tr.affiliate = :affiliate";
        $params = array('affiliate'=>$affiliate); 
        
        if($youtube)
        {
          $where .= " AND tr.url LIKE :youtube";
          $params['youtube'] = '%youtube.com/watch?v=%';     
        }
        
        $query = $query->where($where)
                       ->setParameters($params)
                       ->getQuery(); 
          
        return $query->getSingleScalarResult();
    }
}
